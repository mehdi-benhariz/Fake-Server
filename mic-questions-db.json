{
    "communQuestions": [
        {
            "question": "What is JavaScript primarily used for in web development?",
            "answers": [
                "Creating 3D graphics",
                "Server administration",
                "Adding interactivity and functionality to web pages",
                "Data analysis"
            ],
            "isCode": false,
            "points": 1,
            "correctIndex": 2,
            "id": 1
        }
    ],
    "easyQuestions":[
        {"question":"Which programming paradigm does JavaScript support?","answers":["Only procedural programming","Only object-oriented programming","Only functional programming","Procedural, object-oriented, and functional programming"],"isCode":false,"points":1,"correctIndex":3,"id":17},
        {"question":"How do you declare a variable in JavaScript?","answers":["variable x = 10;","int x = 10;","let x = 10;","x = 10;"],"isCode":true,"points":1,"correctIndex":2,"id":18},
        {"question":"How do you declare a variable in JavaScript?","answers":["Using the \"define\" keyword","With the \"variable\" keyword","Using \"var,\" \"let,\" or \"const\"","Variables are automatically declared in JavaScript"],"isCode":false,"points":1,"correctIndex":2,"id":19},
        {"question":"Which of the following is a valid way to write a comment in JavaScript?","answers":["* This is a comment *","// This is a comment","-- This is a comment --","# This is a comment"],"isCode":true,"points":1,"correctIndex":1,"id":20},
        {"question":"What is the result of the expression \"2 + 2\" in JavaScript?","answers":["4","\"4\"","\"2 + 2\"","It's an error"],"isCode":false,"points":1,"correctIndex":0,"id":21},
        {"question":"How do you add an event listener to an HTML element in JavaScript?","answers":["By using the \"connectEvent\" method.","By wrapping the element in a <script> tag.","By using the \"addEventListener\" method and specifying the event type and a function to be executed.","By using the \"onEvent\" attribute in the HTML element."],"isCode":false,"points":1,"correctIndex":2,"id":22},
        {"question":"Explain the difference between \"let,\" \"const,\" and \"var\" when declaring variables in JavaScript.","answers":["They are all the same and can be used interchangeably.","\"let\" and \"const\" are used for loops, while \"var\" is used for mathematical operations.","\"let\" and \"const\" are block-scoped and \"var\" is function-scoped.","\"let\" is used for numbers, \"const\" for strings, and \"var\" for arrays."],"isCode":false,"points":1,"correctIndex":2,"id":23},
        {"question":"Which of the following is a data type in JavaScript?","answers":["Boolean","Webpage","Algorithm","Database"],"isCode":false,"points":1,"correctIndex":0,"id":24},
        {"question":"What is the correct way to display a message in the browser console using JavaScript?","answers":["alert('Hello, World!');","document.write('Hello, World!');","console.log('Hello, World!');","window.showMessage('Hello, World!');"],"isCode":true,"points":1,"correctIndex":2,"id":25},
        {"question":"What keyword is used to declare a constant variable in JavaScript?","answers":["const","let","var","constant"],"isCode":false,"points":1,"correctIndex":0,"id":26},
        {"question":"In JavaScript, what does the 'NaN' value represent?","answers":["Not a Number","A large number","A random number","The number zero"],"isCode":false,"points":1,"correctIndex":0,"id":27},
        {"question":"Which JavaScript method is used to change the content of an HTML element?","answers":["changeContent()","modifyHTML()","replaceText()","innerHTML"],"isCode":false,"points":1,"correctIndex":3,"id":28},
        {"question":"What is the correct way to check if a variable 'x' is equal to 5 in JavaScript?","answers":["if (x = 5) { /* code here */ }","if (x == 5) { /* code here */ }","if (x === 5) { /* code here */ }","if (x != 5) { /* code here */ }"],"isCode":true,"points":1,"correctIndex":1,"id":29},
        {"question":"What is the value of '5 + '5' in JavaScript?","answers":["10","'55'","55","An error"],"isCode":true,"points":1,"correctIndex":1,"id":30},
        {"question":"Which JavaScript function is used to round a number to the nearest integer?","answers":["Math.round()","Math.ceil()","Math.floor()","Math.random()"],"isCode":false,"points":1,"correctIndex":0,"id":31}
    ],
    "mediumQuestions":[
        {"question":"What is a callback function in JavaScript, and why is it used?","answers":["A function that is called automatically when a program starts.","A function passed as an argument to another function, which is then invoked after a particular task is completed.","A function that defines the main program logic.","A function used for mathematical calculations."],"isCode":false,"points":3,"correctIndex":1,"id":1} ,
        {"question":"What is the difference between 'null' and 'undefined' in JavaScript?","answers":["They are the same and can be used interchangeably.","Null represents a missing value, while undefined represents an empty object.","Undefined represents a missing value, while null represents an empty object.","Null is a reserved keyword in JavaScript, and undefined is not."],"isCode":false,"points":3,"correctIndex":1,"id":2},
        {"question":"What is a JavaScript closure, and how does it work?","answers":["A security feature in JavaScript","A way to control access to variables","A function that can access and modify variables from its containing function .","A mechanism for preventing code execution"],"isCode":false,"points":3,"correctIndex":2,"id":3},
        {"question":"What is the purpose of a 'try...catch' statement in JavaScript?","answers":["To define a new variable","To handle exceptions and errors gracefully","To create a loop","To change the document structure"],"isCode":false,"points":3,"correctIndex":1,"id":4},
        {"question":"Explain the concept of asynchronous programming in JavaScript and why it's important.","answers":["It's a way to make programs run faster.","It's a method for executing code line by line.","It's a way to handle tasks that might take some time to complete, such as fetching data from a server, without blocking the main thread and making the user interface unresponsive.","It's a way to ensure that code runs in a specific order."],"isCode":false,"points":3,"correctIndex":2,"id":5},
        {"question":"What is the purpose of the 'Arrow function' syntax in JavaScript, and how does it differ from regular functions?","answers":["It's used to create objects.","It's used to write SQL queries.","It's a concise way to write functions, and it does not have its own 'this' value, so it doesn't bind a new context.","It's used for loops."],"isCode":false,"points":3,"correctIndex":2,"id":6},
        {"question":"What is the 'event loop' in JavaScript, and how does it help manage asynchronous operations?","answers":["It's a way to create animations in JavaScript.","It's a component in web browsers responsible for rendering web pages.","It's a mechanism that allows JavaScript to perform non-blocking, asynchronous operations.","It's a way to define objects in JavaScript."],"isCode":false,"points":3,"correctIndex":2,"id":7},
        {"question":"Using the 'map' function, how can you double each number in an array like [2, 4, 6] and create a new array with the results?","answers":["map([2, 4, 6], num => num * 2);","map([2, 4, 6], doubleNums);","map([2, 4, 6], num + num);","map([2, 4, 6], num * num);"],"isCode":true,"points":3,"correctIndex":0,"id":8},
        {"question":"Using the 'reduce' function, how can you find the sum of numbers in an array like [3, 5, 7]?","answers":["reduce([3, 5, 7], (accumulator, num) => accumulator + num, 0);","reduce([3, 5, 7], (accumulator, num) => accumulator + num);","reduce([3, 5, 7], sumNumbers, 0);","reduce([3, 5, 7], (accumulator, num) => accumulator * num);"],"isCode":true,"points":3,"correctIndex":0,"id":9},
        {"question":"Using the 'filter' function, how can you create an array with only the even numbers from [1, 2, 3, 4, 5]?","answers":["filter([1, 2, 3, 4, 5], num => num % 2 === 0);","filter([1, 2, 3, 4, 5], isEven);","filter([1, 2, 3, 4, 5], num + num);","filter([1, 2, 3, 4, 5], num => num % 2 === 1);"],"isCode":true,"points":3,"correctIndex":0,"id":10},
        {"question":"Write a code example of an arrow function that takes two parameters 'x' and 'y' and returns their sum.","answers":["const add = (x, y) => x + y;","function add(x, y) { return x + y; }","add(x, y) => x + y;","const add = function(x, y) { return x + y; }"],"isCode":true,"points":3,"correctIndex":0,"id":11},
        {"question":"How can you use arrow functions to simplify the code for mapping a list of numbers to their squares? Provide an example.","answers":["const numbers = [1, 2, 3, 4, 5]; \n const squares = numbers.map(num => num * num);","const numbers = [1, 2, 3, 4, 5]; \n const squares = numbers.map(function(num) { return num * num; });","const numbers = [1, 2, 3, 4, 5]; \n const squares = numbers.map(num * num);","const numbers = [1, 2, 3, 4, 5]; \n const squares = numbers.map((num) => { return num * num; });"],"isCode":true,"points":3,"correctIndex":0,"id":12},
        {"question":"Write a code example of an arrow function that accepts an array of names and filters out those that start with the letter 'A'.","answers":["const names = ['Alice', 'Bob', 'Eve', 'Andrew', 'Charlie']; \n const filteredNames = names.filter(name => name[0] === 'A');","const names = ['Alice', 'Bob', 'Eve', 'Andrew', 'Charlie']; \n const filteredNames = names.filter(function(name) { return name[0] === 'A'; });","const names = ['Alice', 'Bob', 'Eve', 'Andrew', 'Charlie']; \n const filteredNames = names.filter(name[0] === 'A');","const names = ['Alice', 'Bob', 'Eve', 'Andrew', 'Charlie']; \n const filteredNames = names.filter(name => { return name[0] === 'A'; });"],"isCode":true,"points":3,"correctIndex":0,"id":13},
        {"question":"Write a code example using the 'map' function to double each number in an array and create a new array with the results.","answers":["const numbers = [1, 2, 3, 4, 5]; \n const doubledNumbers = numbers.map(num => num * 2);","const numbers = [1, 2, 3, 4, 5]; \n const doubledNumbers = numbers.map(num => num + num);","const numbers = [1, 2, 3, 4, 5]; \n const doubledNumbers = numbers.map(num => num - 1);","const numbers = [1, 2, 3, 4, 5]; \n const doubledNumbers = numbers.map(num => num / 2);"],"isCode":true,"points":3,"correctIndex":0,"id":14},
        {"question":"Provide a code example using the 'reduce' function to find the sum of numbers in an array.","answers":["const numbers = [1, 2, 3, 4, 5]; \n const sum = numbers.reduce((accumulator, current) => accumulator + current, 0);","const numbers = [1, 2, 3, 4, 5]; \n const sum = numbers.reduce((accumulator, current) => current - accumulator, 0);","const numbers = [1, 2, 3, 4, 5]; \n const sum = numbers.reduce((accumulator, current) => accumulator * current, 1);","const numbers = [1, 2, 3, 4, 5]; \n const sum = numbers.reduce((accumulator, current) => current, 0);"],"isCode":true,"points":3,"correctIndex":0,"id":15},
        {"question":"Write a code example using the 'filter' function to create an array with only the even numbers from another array.","answers":["const numbers = [1, 2, 3, 4, 5, 6, 7, 8]; \n const evens = numbers.filter(num => num % 2 === 0);","const numbers = [1, 2, 3, 4, 5, 6, 7, 8]; \n const evens = numbers.filter(num => num % 2 === 1);","const numbers = [1, 2, 3, 4, 5, 6, 7, 8]; \n const evens = numbers.filter(num => num);","const numbers = [1, 2, 3, 4, 5, 6, 7, 8]; \n const evens = numbers.filter(num => num % 2 === 2);"],"isCode":true,"points":3,"correctIndex":0,"id":16}
      ],
      "hardQuestions":[ 
   {"question":"Which programming paradigm does JavaScript support?","answers":["Only procedural programming","Only object-oriented programming","Only functional programming","Procedural, object-oriented, and functional programming"],"isCode":false,"points":1,"correctIndex":3,"id":17},
    {"question":"How do you declare a variable in JavaScript?","answers":["variable x = 10;","int x = 10;","let x = 10;","x = 10;"],"isCode":true,"points":1,"correctIndex":2,"id":18},
    {"question":"How do you declare a variable in JavaScript?","answers":["Using the \"define\" keyword","With the \"variable\" keyword","Using \"var,\" \"let,\" or \"const\"","Variables are automatically declared in JavaScript"],"isCode":false,"points":1,"correctIndex":2,"id":19},
    {"question":"Which of the following is a valid way to write a comment in JavaScript?","answers":["* This is a comment *","// This is a comment","-- This is a comment --","# This is a comment"],"isCode":true,"points":1,"correctIndex":1,"id":20},
    {"question":"What is the result of the expression \"2 + 2\" in JavaScript?","answers":["4","\"4\"","\"2 + 2\"","It's an error"],"isCode":false,"points":1,"correctIndex":0,"id":21},
    {"question":"How do you add an event listener to an HTML element in JavaScript?","answers":["By using the \"connectEvent\" method.","By wrapping the element in a <script> tag.","By using the \"addEventListener\" method and specifying the event type and a function to be executed.","By using the \"onEvent\" attribute in the HTML element."],"isCode":false,"points":1,"correctIndex":2,"id":22},
    {"question":"Explain the difference between \"let,\" \"const,\" and \"var\" when declaring variables in JavaScript.","answers":["They are all the same and can be used interchangeably.","\"let\" and \"const\" are used for loops, while \"var\" is used for mathematical operations.","\"let\" and \"const\" are block-scoped and \"var\" is function-scoped.","\"let\" is used for numbers, \"const\" for strings, and \"var\" for arrays."],"isCode":false,"points":1,"correctIndex":2,"id":23},
    {"question":"Which of the following is a data type in JavaScript?","answers":["Boolean","Webpage","Algorithm","Database"],"isCode":false,"points":1,"correctIndex":0,"id":24},
    {"question":"What is the correct way to display a message in the browser console using JavaScript?","answers":["alert('Hello, World!');","document.write('Hello, World!');","console.log('Hello, World!');","window.showMessage('Hello, World!');"],"isCode":true,"points":1,"correctIndex":2,"id":25},
    {"question":"What keyword is used to declare a constant variable in JavaScript?","answers":["const","let","var","constant"],"isCode":false,"points":1,"correctIndex":0,"id":26},
    {"question":"In JavaScript, what does the 'NaN' value represent?","answers":["Not a Number","A large number","A random number","The number zero"],"isCode":false,"points":1,"correctIndex":0,"id":27},
    {"question":"Which JavaScript method is used to change the content of an HTML element?","answers":["changeContent()","modifyHTML()","replaceText()","innerHTML"],"isCode":false,"points":1,"correctIndex":3,"id":28},
    {"question":"What is the correct way to check if a variable 'x' is equal to 5 in JavaScript?","answers":["if (x = 5) { /* code here */ }","if (x == 5) { /* code here */ }","if (x === 5) { /* code here */ }","if (x != 5) { /* code here */ }"],"isCode":true,"points":1,"correctIndex":1,"id":29},
    {"question":"What is the value of '5 + '5' in JavaScript?","answers":["10","'55'","55","An error"],"isCode":true,"points":1,"correctIndex":1,"id":30},
    {"question":"Which JavaScript function is used to round a number to the nearest integer?","answers":["Math.round()","Math.ceil()","Math.floor()","Math.random()"],"isCode":false,"points":1,"correctIndex":0,"id":31},
    {"question":"Explain the differences between 'localStorage' and 'sessionStorage' in JavaScript, and provide a practical use case for each.","answers":["They are the same thing with different names.","They differ in data storage.","They are used for server-side data storage.","They are used for creating server-side sessions."],"isCode":false,"points":4,"correctIndex":1,"id":32},
    {"question":"What is a 'Promise' in JavaScript, and how do you handle errors with Promises?","answers":["It's a guarantee that a function will execute successfully. Errors are managed via 'catch' or a second 'then' argument for rejections.","It's a way to implement loops in JavaScript. Errors are managed via 'throw Exception'.","It's The outcome of an asynchronous task. Errors are managed via 'catch' or a second 'then' argument for rejections.","It's a way to define asynchronous loops in JavaScript. The Errors are not managed "],"isCode":false,"points":4,"correctIndex":2,"id":33},
    {"question":"What is the purpose of 'strict mode' in JavaScript, and how does it differ from 'sloppy mode'? Provide an example of a situation where 'strict mode' is beneficial.","answers":["It's a way to write code with fewer restrictions.","It's a way to enable more lenient error handling.","A set of rules that tighten the rules of JavaScript. ","It's a way to optimize code for mobile devices."],"isCode":false,"points":4,"correctIndex":2,"id":34},
    {"question":"Explain the concept of 'callback hell' in asynchronous JavaScript, and how can it be mitigated using techniques like 'Promises' or 'async/await'?","answers":["It's a place where callbacks are executed asynchronously.","It's a term used to describe a scenario where multiple nested callbacks are used for handling asynchronous operations .","It's a term used to describe the ideal use of callbacks in JavaScript.","It's a smart way to implement asynchronous loops in JavaScript, granting greater concurrency and responsiveness through callback functions."],"isCode":false,"points":4,"correctIndex":2,"id":35},
    {"question":"What is the purpose of the 'fetch' API in JavaScript, and how is it used for making HTTP requests?","answers":["It's used for creating interactive forms.","It's used to fetch data from a database.","It's a modern API for making network requests to retrieve data from a server.","It's used to create animations in JavaScript."],"isCode":false,"points":4,"correctIndex":2,"id":36}
    ]
}